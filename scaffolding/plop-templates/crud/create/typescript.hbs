import { Component, OnInit, ViewChild } from '@angular/core';
import { Router, ActivatedRoute } from '@angular/router';
import { NgForm } from '@angular/forms';
import { ObservableState, handleErrors, recordState, changeRouteOnSuccess } from '../../shared/helpers';
import { {{pascalCase entity.name}}CreateModel } from '../../shared/models/{{camelCase entity.name}}/{{camelCase entity.name}}CreateModel';
import { {{pascalCase entity.name}}Service } from '../../shared/services';

@Component({
  selector: '{{camelCase entity.name}}-create',
  templateUrl: './{{camelCase entity.name}}-create.component.html',
  styleUrls: ['./{{camelCase entity.name}}-create.component.scss']
})
export class {{pascalCase entity.name}}CreateComponent implements OnInit {

  constructor(
    private {{camelCase entity.name}}Service: {{pascalCase entity.name}}Service,
    private router: Router,
    private route: ActivatedRoute
  ) { }

  createModel: {{pascalCase entity.name}}CreateModel = new {{pascalCase entity.name}}CreateModel();
  creationState: ObservableState = new ObservableState();
  @ViewChild('formModel', { static: true }) public ngform: NgForm;
  
  ngOnInit() {
  }

  onSubmit() {
    this.creationState.Start();
    this.{{camelCase entity.name}}Service.create{{pascalCase entity.name}}(this.createModel)
      .pipe(
        handleErrors(this.ngform.form),
        recordState(this.creationState),
        changeRouteOnSuccess(this.router, this.route, "../")
      )
      .subscribe();
  }

}
