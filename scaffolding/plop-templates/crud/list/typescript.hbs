import { Component, OnInit, ChangeDetectorRef, ChangeDetectionStrategy, OnDestroy } from '@@angular/core';
import { Service } from '../HubState';
import { Subscription } from 'rxjs';
@{ 
     
    var listNamePascalCase = StringHelpers.ToPascalCase(Model.listName);
}
@@Component({
    selector: 'app-@Model.name-list',
    templateUrl: './list.component.html',
    styleUrls: ['./list.component.scss'],
    changeDetection: ChangeDetectionStrategy.OnPush
})
export class @(listNamePascalCase)ListComponent implements OnInit, OnDestroy {

    private pageChange: Subscription;
    private stateChange: Subscription;
    constructor(
        private service: Service,
        private cdr: ChangeDetectorRef
    ) {
    }

    ngOnDestroy(): void {
        this.pageChange.unsubscribe();
        this.stateChange.unsubscribe();
    }
    ngOnInit() {
        this.pageChange = this.service.page.subscribe(x => {
            this.cdr.detectChanges();
        });
        this.stateChange = this.service.state.subscribe(x => {
            this.cdr.detectChanges();
        });
    }
   
    getPage(event: any) {
        this.service.pagingOptions.pageIndex = event.first / event.rows;
        this.service.refresh();
    }
}
