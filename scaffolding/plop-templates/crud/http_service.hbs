import { Injectable, Inject } from '@angular/core';
import { HttpClient } from "@angular/common/http";
import { Observable } from 'rxjs';
import { toHttpParams, toFormData } from '../helpers';
import { SimpleSearchModel, PagingOptions, PagedList } from '../models/common';
import { {{pascalCase entity.name}}, {{pascalCase entity.name}}DetailsModel, {{pascalCase entity.name}}CreateModel,{{pascalCase entity.name}}EditModel } from '../models/{{camelCase entity.name}}';

@Injectable({
  providedIn: 'root'
})
export class {{pascalCase entity.name}}Service {
  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string) {
  }
  get{{pascalCase entity.name}}Details(id: string): Observable<{{pascalCase entity.name}}DetailsModel> {
    return this.http.get<{{pascalCase entity.name}}DetailsModel>(this.baseUrl + 'api/{{pascalCase entity.name}}Service/Get{{pascalCase entity.name}}Details', { params: toHttpParams({ id }) });
  }
  {{camelCase entity.name}}SimpleSearch(model: SimpleSearchModel & PagingOptions): Observable<PagedList<{{pascalCase entity.name}}>> {
    return this.http.get<PagedList<{{pascalCase entity.name}}>>(this.baseUrl + 'api/{{pascalCase entity.name}}Management/{{pascalCase entity.name}}SimpleSearch', { params: toHttpParams(model) });
  }
  create{{pascalCase entity.name}}(model: {{pascalCase entity.name}}CreateModel): Observable<void> {
    return this.http.post<void>(this.baseUrl + 'api/{{pascalCase entity.name}}Management/Create{{pascalCase entity.name}}', toFormData(model));
  }
  edit{{pascalCase entity.name}}(model: {{pascalCase entity.name}}EditModel): Observable<void> {
    return this.http.put<void>(this.baseUrl + 'api/BookManagement/Edit{{pascalCase entity.name}}', toFormData(model));
  }
  delete{{pascalCase entity.name}}(id: string): Observable<void> {
    return this.http.delete<void>(this.baseUrl + 'api/{{pascalCase entity.name}}Management/Delete{{pascalCase entity.name}}', { params: toHttpParams({id}) });
  }
}
